/**
 * generated by Xtext 2.25.0
 */
package org.xtext.project.rds.myRds.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.project.rds.myRds.MenuItem;
import org.xtext.project.rds.myRds.MyRdsPackage;
import org.xtext.project.rds.myRds.OrderItem;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Order Item</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.project.rds.myRds.impl.OrderItemImpl#getQuantity <em>Quantity</em>}</li>
 *   <li>{@link org.xtext.project.rds.myRds.impl.OrderItemImpl#getMenuItem <em>Menu Item</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OrderItemImpl extends MinimalEObjectImpl.Container implements OrderItem
{
  /**
   * The default value of the '{@link #getQuantity() <em>Quantity</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQuantity()
   * @generated
   * @ordered
   */
  protected static final int QUANTITY_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getQuantity() <em>Quantity</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQuantity()
   * @generated
   * @ordered
   */
  protected int quantity = QUANTITY_EDEFAULT;

  /**
   * The cached value of the '{@link #getMenuItem() <em>Menu Item</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMenuItem()
   * @generated
   * @ordered
   */
  protected MenuItem menuItem;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OrderItemImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyRdsPackage.Literals.ORDER_ITEM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getQuantity()
  {
    return quantity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setQuantity(int newQuantity)
  {
    int oldQuantity = quantity;
    quantity = newQuantity;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyRdsPackage.ORDER_ITEM__QUANTITY, oldQuantity, quantity));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MenuItem getMenuItem()
  {
    if (menuItem != null && menuItem.eIsProxy())
    {
      InternalEObject oldMenuItem = (InternalEObject)menuItem;
      menuItem = (MenuItem)eResolveProxy(oldMenuItem);
      if (menuItem != oldMenuItem)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyRdsPackage.ORDER_ITEM__MENU_ITEM, oldMenuItem, menuItem));
      }
    }
    return menuItem;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MenuItem basicGetMenuItem()
  {
    return menuItem;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMenuItem(MenuItem newMenuItem)
  {
    MenuItem oldMenuItem = menuItem;
    menuItem = newMenuItem;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyRdsPackage.ORDER_ITEM__MENU_ITEM, oldMenuItem, menuItem));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyRdsPackage.ORDER_ITEM__QUANTITY:
        return getQuantity();
      case MyRdsPackage.ORDER_ITEM__MENU_ITEM:
        if (resolve) return getMenuItem();
        return basicGetMenuItem();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyRdsPackage.ORDER_ITEM__QUANTITY:
        setQuantity((Integer)newValue);
        return;
      case MyRdsPackage.ORDER_ITEM__MENU_ITEM:
        setMenuItem((MenuItem)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyRdsPackage.ORDER_ITEM__QUANTITY:
        setQuantity(QUANTITY_EDEFAULT);
        return;
      case MyRdsPackage.ORDER_ITEM__MENU_ITEM:
        setMenuItem((MenuItem)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyRdsPackage.ORDER_ITEM__QUANTITY:
        return quantity != QUANTITY_EDEFAULT;
      case MyRdsPackage.ORDER_ITEM__MENU_ITEM:
        return menuItem != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (quantity: ");
    result.append(quantity);
    result.append(')');
    return result.toString();
  }

} //OrderItemImpl
