/**
 * generated by Xtext 2.25.0
 */
package org.xtext.project.rds.myRds.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

import org.xtext.project.rds.myRds.Menu;
import org.xtext.project.rds.myRds.MenuItem;
import org.xtext.project.rds.myRds.MyRdsPackage;
import org.xtext.project.rds.myRds.Restaurant;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Menu</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.project.rds.myRds.impl.MenuImpl#getRestaurant <em>Restaurant</em>}</li>
 *   <li>{@link org.xtext.project.rds.myRds.impl.MenuImpl#getMenuItems <em>Menu Items</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MenuImpl extends AbstractElementImpl implements Menu
{
  /**
   * The cached value of the '{@link #getRestaurant() <em>Restaurant</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRestaurant()
   * @generated
   * @ordered
   */
  protected Restaurant restaurant;

  /**
   * The cached value of the '{@link #getMenuItems() <em>Menu Items</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMenuItems()
   * @generated
   * @ordered
   */
  protected EList<MenuItem> menuItems;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MenuImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyRdsPackage.Literals.MENU;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Restaurant getRestaurant()
  {
    if (restaurant != null && restaurant.eIsProxy())
    {
      InternalEObject oldRestaurant = (InternalEObject)restaurant;
      restaurant = (Restaurant)eResolveProxy(oldRestaurant);
      if (restaurant != oldRestaurant)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyRdsPackage.MENU__RESTAURANT, oldRestaurant, restaurant));
      }
    }
    return restaurant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Restaurant basicGetRestaurant()
  {
    return restaurant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRestaurant(Restaurant newRestaurant)
  {
    Restaurant oldRestaurant = restaurant;
    restaurant = newRestaurant;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyRdsPackage.MENU__RESTAURANT, oldRestaurant, restaurant));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<MenuItem> getMenuItems()
  {
    if (menuItems == null)
    {
      menuItems = new EObjectResolvingEList<MenuItem>(MenuItem.class, this, MyRdsPackage.MENU__MENU_ITEMS);
    }
    return menuItems;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyRdsPackage.MENU__RESTAURANT:
        if (resolve) return getRestaurant();
        return basicGetRestaurant();
      case MyRdsPackage.MENU__MENU_ITEMS:
        return getMenuItems();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyRdsPackage.MENU__RESTAURANT:
        setRestaurant((Restaurant)newValue);
        return;
      case MyRdsPackage.MENU__MENU_ITEMS:
        getMenuItems().clear();
        getMenuItems().addAll((Collection<? extends MenuItem>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyRdsPackage.MENU__RESTAURANT:
        setRestaurant((Restaurant)null);
        return;
      case MyRdsPackage.MENU__MENU_ITEMS:
        getMenuItems().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyRdsPackage.MENU__RESTAURANT:
        return restaurant != null;
      case MyRdsPackage.MENU__MENU_ITEMS:
        return menuItems != null && !menuItems.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //MenuImpl
