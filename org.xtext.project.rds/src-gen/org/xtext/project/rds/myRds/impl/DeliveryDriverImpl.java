/**
 * generated by Xtext 2.25.0
 */
package org.xtext.project.rds.myRds.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.project.rds.myRds.DeliveryDriver;
import org.xtext.project.rds.myRds.MyRdsPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Delivery Driver</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.project.rds.myRds.impl.DeliveryDriverImpl#getIsAvailable <em>Is Available</em>}</li>
 *   <li>{@link org.xtext.project.rds.myRds.impl.DeliveryDriverImpl#getCarLicenceNumber <em>Car Licence Number</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DeliveryDriverImpl extends UserRoleImpl implements DeliveryDriver
{
  /**
   * The default value of the '{@link #getIsAvailable() <em>Is Available</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIsAvailable()
   * @generated
   * @ordered
   */
  protected static final int IS_AVAILABLE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getIsAvailable() <em>Is Available</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIsAvailable()
   * @generated
   * @ordered
   */
  protected int isAvailable = IS_AVAILABLE_EDEFAULT;

  /**
   * The default value of the '{@link #getCarLicenceNumber() <em>Car Licence Number</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCarLicenceNumber()
   * @generated
   * @ordered
   */
  protected static final String CAR_LICENCE_NUMBER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCarLicenceNumber() <em>Car Licence Number</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCarLicenceNumber()
   * @generated
   * @ordered
   */
  protected String carLicenceNumber = CAR_LICENCE_NUMBER_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DeliveryDriverImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyRdsPackage.Literals.DELIVERY_DRIVER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getIsAvailable()
  {
    return isAvailable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIsAvailable(int newIsAvailable)
  {
    int oldIsAvailable = isAvailable;
    isAvailable = newIsAvailable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyRdsPackage.DELIVERY_DRIVER__IS_AVAILABLE, oldIsAvailable, isAvailable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCarLicenceNumber()
  {
    return carLicenceNumber;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCarLicenceNumber(String newCarLicenceNumber)
  {
    String oldCarLicenceNumber = carLicenceNumber;
    carLicenceNumber = newCarLicenceNumber;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyRdsPackage.DELIVERY_DRIVER__CAR_LICENCE_NUMBER, oldCarLicenceNumber, carLicenceNumber));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyRdsPackage.DELIVERY_DRIVER__IS_AVAILABLE:
        return getIsAvailable();
      case MyRdsPackage.DELIVERY_DRIVER__CAR_LICENCE_NUMBER:
        return getCarLicenceNumber();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyRdsPackage.DELIVERY_DRIVER__IS_AVAILABLE:
        setIsAvailable((Integer)newValue);
        return;
      case MyRdsPackage.DELIVERY_DRIVER__CAR_LICENCE_NUMBER:
        setCarLicenceNumber((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyRdsPackage.DELIVERY_DRIVER__IS_AVAILABLE:
        setIsAvailable(IS_AVAILABLE_EDEFAULT);
        return;
      case MyRdsPackage.DELIVERY_DRIVER__CAR_LICENCE_NUMBER:
        setCarLicenceNumber(CAR_LICENCE_NUMBER_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyRdsPackage.DELIVERY_DRIVER__IS_AVAILABLE:
        return isAvailable != IS_AVAILABLE_EDEFAULT;
      case MyRdsPackage.DELIVERY_DRIVER__CAR_LICENCE_NUMBER:
        return CAR_LICENCE_NUMBER_EDEFAULT == null ? carLicenceNumber != null : !CAR_LICENCE_NUMBER_EDEFAULT.equals(carLicenceNumber);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (isAvailable: ");
    result.append(isAvailable);
    result.append(", carLicenceNumber: ");
    result.append(carLicenceNumber);
    result.append(')');
    return result.toString();
  }

} //DeliveryDriverImpl
